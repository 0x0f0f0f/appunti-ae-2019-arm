$date
	Fri Oct 25 20:28:39 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test $end
$var wire 8 ! z [0:7] $end
$var reg 1 " clock $end
$var reg 8 # x [0:7] $end
$var reg 8 $ y [0:7] $end
$scope module a $end
$var wire 1 " clock $end
$var wire 8 % x [0:7] $end
$var wire 8 & y [0:7] $end
$var wire 8 ' z [0:7] $end
$var wire 1 ( inc $end
$scope module c $end
$var wire 1 " clock $end
$var wire 8 ) z [0:7] $end
$var wire 1 ( inc $end
$var reg 8 * value [0:7] $end
$upscope $end
$scope module sm $end
$var wire 1 ( inc $end
$var wire 8 + x [0:7] $end
$var wire 8 , y [0:7] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b101 ,
b11 +
b0 *
b0 )
1(
b0 '
b101 &
b11 %
b101 $
b11 #
0"
b0 !
$end
#2
b1 !
b1 '
b1 )
b1 *
1"
#3
0(
0"
b11 $
b11 &
b11 ,
b10 #
b10 %
b10 +
#5
1"
#6
1(
0"
b11 #
b11 %
b11 +
#8
b10 !
b10 '
b10 )
b10 *
1"
#9
0"
b1 #
b1 %
b1 +
#11
b11 !
b11 '
b11 )
b11 *
1"
#12
0"
b10 $
b10 &
b10 ,
b10 #
b10 %
b10 +
#14
b100 !
b100 '
b100 )
b100 *
1"
#15
0"
#17
b101 !
b101 '
b101 )
b101 *
1"
#18
0"
#20
b110 !
b110 '
b110 )
b110 *
1"
#21
0"
#22
